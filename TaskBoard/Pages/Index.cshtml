@page
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using TaskBoard.Pages
@using TaskBoard.Tasks
@using TaskBoard.Tasks.Views
@using Index = TaskBoard.Pages.Index
@model Index
@{
    var taskLookup = Model.Tasks.OrderBy(t => t.Title).GroupBy(t => t.State).ToDictionary(t => t.Key, t => t.ToArray());

    var actions = new Dictionary<TaskState, string[]>
    {
        [TaskState.New] = [ActionNames.Start, "!"+ActionNames.Delete],
        [TaskState.InProgress] = [ActionNames.Pause, ActionNames.Complete, ActionNames.Cancel],
        [TaskState.OnHold] = [ActionNames.Resume, ActionNames.Cancel],
        [TaskState.Completed] = [ActionNames.Archive],
        [TaskState.Canceled] = [ActionNames.Archive]
    };
    var light = false;

    var states = new[] { TaskState.New, TaskState.InProgress, TaskState.OnHold, TaskState.Completed, TaskState.Canceled };
}

@section styles {
    <style>
        .note.replying { font-weight: bold; color: var(--bs-success); }
        .note .responses { padding-left: 2rem; border-left: solid 1px var(--bs-dark-bg-subtle); }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" integrity="sha512-vKMx8UnXk60zUwyUnUPM3HbQo8QfmNx7+ltw8Pm5zLusl1XIfwcxo8DbWCqMGKaWeNxWA8yrx5v3SaVpMvR3CA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
}

@if (TempData["Message"] != null)
{
    <div class="alert">@TempData["Message"]</div>
}
<form method="post" asp-page-handler="CreateTask">
    <div class="modal fade" id="CreateTaskModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h3>Add Task</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="text" class="form-control mb-2" placeholder="Task Title" name="title"/>
                    <select class="form-select mb-2" name="priority">
                        <option disabled="disabled" hidden="hidden" selected="selected">Select Priority</option>
                        @foreach (var priority in Enum.GetNames<TaskPriority>())
                        {
                            <option value="@priority">@priority</option>
                        }
                    </select>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Create Task</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</form>

<form method="post" asp-page-handler="AddNote">
    <input type="hidden" id="AddNoteTaskId" name="taskId" />
    <div class="modal fade" id="notesModal">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h3>Notes</h3>
                    <button class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="notes">
                        
                    </div>
                    <input type="hidden" name="inResponseTo" id="AddNoteInResponseTo" value="@Guid.Empty"/>
                    <div class="input-group">
                        <input type="text" class="form-control" name="note" placeholder="Type your note"/>
                        <button type="submit" class="btn btn-primary"><i class="fa fa-paper-plane-top"></i></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<div class="row" style="min-height: 100vh;">
    <div class="col-2">
        <h2>Task Board</h2>
        <form method="post" asp-page-handler="AddUser" class="row g-3 mb-2">
            <div class="col-auto">
                <input class="form-control" type="text" name="userid" placeholder="User Id"/>
            </div>
            <div class="col-auto">
                <input class="form-control" type="text" name="name" placeholder="Name"/>
            </div>
            <div class="col-auto">
                <button class="btn btn-primary" type="submit">Create User</button>
            </div>
        </form>
    </div>
    @foreach (var state in states)
    {
        light = !light;
        
        <div class="col-2 @(light?"bg-light":"bg-white")" data-state="@state" data-actions="@(string.Join(",", actions[state]))">
            <div class="sticky-top d-flex @(light?"bg-light":"bg-white")">
                <h4>@state.ToString()</h4>
                @if (state == TaskState.New)
                {
                    <div class="ms-auto"><i class="fa fa-plus" role="button" data-bs-target="#CreateTaskModal" data-bs-toggle="modal"></i></div>
                }
            </div>
            @foreach (var task in taskLookup.GetValueOrDefault(state, Array.Empty<TaskDetail>()))
            {
                <div class="card mb-2" data-task-id="@task.Id">
                    <div class="card-body">
                        <h6 class="card-title" data-title="@task.Title"><i class="me-1 fa fa-pencil edit-title" role="button"></i>@task.Title </h6>
                            <div class="input-group mb-2 d-none">
                                <input type="text" name="title" value="@task.Title" class="form-control"/>
                                <button type="submit" class="btn btn-success btn-sm"><i class="fa fa-check"></i></button>
                                <button type="button" class="btn btn-danger btn-sm edit-title-close"><i class="fa fa-close"></i></button>
                            </div>
                        @if (TempData.TryGetValue(Index.MessageIdForTask(task.Id), out var message))
                        {
                            <div class="card-text text-danger">@message</div>
                        }
                        <div class="mb-2 d-flex">
                            <div class="priority-options" style="--bs-btn-font-size: 0.5rem;" data-option="@task.Priority">
                                <input type="hidden" name="taskId" value="@task.Id"/>
                                <input name="@task.Id-priority" type="radio" class="btn-check" id="@($"{task.Id}-priority-low")" value="@TaskPriority.Low" checked="@(task.Priority == "Low")"/>
                                <label for="@($"{task.Id}-priority-low")" class="btn btn-outline-primary btn-sm">
                                    <i class="fa fa-chevron-down"></i>
                                </label>
                                <input name="@task.Id-priority" type="radio" class="btn-check" id="@($"{task.Id}-priority-medium")" value="@TaskPriority.Medium" checked="@(task.Priority == "Medium")"/>
                                <label for="@($"{task.Id}-priority-medium")" class="btn btn-outline-success btn-sm">
                                    <i class="fa fa-dash"></i>
                                </label>
                                <input name="@task.Id-priority" type="radio" class="btn-check" id="@($"{task.Id}-priority-high")" value="@TaskPriority.High" checked="@(task.Priority == "High")"/>
                                <label for="@($"{task.Id}-priority-high")" class="btn btn-outline-warning btn-sm">
                                    <i class="fa fa-chevron-up"></i>
                                </label>
                                <input name="@task.Id-priority" type="radio" class="btn-check" id="@($"{task.Id}-priority-critical")" value="@TaskPriority.Critical" checked="@(task.Priority == "Critical")"/>
                                <label for="@($"{task.Id}-priority-critical")" class="btn btn-outline-danger btn-sm">
                                    <i class="fa fa-circle-exclamation"></i>
                                </label>
                            </div>
                            <div class="ms-auto">
                                <i class="fa fa-notes" role="button" data-bs-toggle="modal" data-bs-target="#notesModal"></i>
                            </div>
                            </div>
                            <select class="form-select mb-2" name="taskAssignee">
                                <option value="@Guid.Empty">Unassigned</option>
                                @foreach (var option in Model.Users)
                                {
                                    <option value="@option.Id" selected="@(option.Id == task.AssigneeId)">@option.Name</option>
                                }
                                @if (Model.Users.All(u => u.Id != task.AssigneeId))
                                {
                                    <option selected="selected" hidden="hidden" disabled="disabled">@task.Assignee</option>
                                }
                            </select>
                        <div class="task-actions">
                        @foreach (var action in actions[state])
                        {
                            if (action[0] == '!')
                            {
                                <a class="btn btn-danger me-1" href="#" data-action="@action[1..]">@action[1..]</a>
                            }
                            else
                            {
                                <a class="btn btn-primary me-1" href="#" data-action="@action">@action</a>
                            }
                        }
                        </div>
                    </div>
                </div>
            }
        </div>
    }

</div>

@section scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js" integrity="sha512-VEd+nq25CkR676O+pLBnDW09R7VQX9Mdiij052gVCp5yVH3jGtH70Ho/UUv4mJDsEdTvqRCFZg0NKGiojGnUCw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.min.js" integrity="sha512-7rhBJh1om/W5Ztx7WiYOR9h2wlSaTmPyQMoHFtbT/FVNIA12y6S6I8HY9mrBS1uJ3dSU/R3qaSAXsGYuRjMDxg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="~/js/index.js"></script>
}

<template id="newTaskTemplate">
    <div class="card mb-2" data-task-id="">
    <div class="card-body">
        <h6 class="card-title" data-title=""><i class="me-1 fa fa-pencil edit-title" role="button"></i></h6>
        <div class="input-group mb-2 d-none">
            <input type="text" name="title" value="" class="form-control"/>
            <button type="submit" class="btn btn-success btn-sm"><i class="fa fa-check"></i></button>
            <button type="button" class="btn btn-danger btn-sm edit-title-close"><i class="fa fa-close"></i></button>
        </div>
        <div class="mb-2 d-flex">
            <div style="--bs-btn-font-size: 0.5rem;">
                <input id="priority-low" name="priority" type="radio" class="btn-check" value="@TaskPriority.Low" />
                <label for="priority-low" class="btn btn-outline-primary btn-sm">
                    <i class="fa fa-chevron-down"></i>
                </label>
                <input name="priority" type="radio" class="btn-check" id="priority-medium" value="@TaskPriority.Medium"/>
                <label for="priority-medium" class="btn btn-outline-success btn-sm">
                    <i class="fa fa-dash"></i>
                </label>
                <input name="priority" type="radio" class="btn-check" id="priority-high" value="@TaskPriority.High"/>
                <label for="priority-high" class="btn btn-outline-warning btn-sm">
                    <i class="fa fa-chevron-up"></i>
                </label>
                <input name="priority" type="radio" class="btn-check" id="priority-critical" value="@TaskPriority.Critical"/>
                <label for="priority-critical" class="btn btn-outline-danger btn-sm">
                    <i class="fa fa-circle-exclamation"></i>
                </label>
            </div>
            <div class="ms-auto">
                <i class="fa fa-notes" role="button" data-bs-toggle="modal" data-bs-target="#notesModal"></i>
            </div>
        </div>
        <select class="form-select mb-2" name="taskAssignee">
            <option value="@Guid.Empty">Unassigned</option>
            @foreach (var option in Model.Users)
            {
                <option value="@option.Id" >@option.Name</option>
            }
        </select>
        <div class="task-actions">
            @foreach (var action in actions[TaskState.New])
            {
                if (action[0] == '!')
                {
                    <a class="btn btn-danger me-1" href="#" data-action="@action[1..]">@action[1..]</a>
                }
                else
                {
                    <a class="btn btn-primary me-1" href="#" data-action="@action">@action</a>
                }
            }
        </div>
    </div>
    </div>
</template>